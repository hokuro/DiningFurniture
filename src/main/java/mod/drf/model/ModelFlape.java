// Date: 2016/10/05 23:44:37
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package mod.drf.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelFlape extends ModelBase
{
  //fields
    ModelRenderer casebase;
    ModelRenderer casecupsid4;
    ModelRenderer casecupsid3;
    ModelRenderer caseporl;
    ModelRenderer casecupbase;
    ModelRenderer casecupsid2;
    ModelRenderer casecupsid1;
    ModelRenderer ice1;
    ModelRenderer ice2;
    ModelRenderer ice3;

    private ModelRenderer[] models;

  public ModelFlape()
  {
    textureWidth = 96;
    textureHeight = 64;
    models = new ModelRenderer[]{ice3,ice2,ice1,casebase,caseporl,casecupbase,casecupsid1,casecupsid2,casecupsid3,casecupsid4};

      casebase = new ModelRenderer(this, 0, 0);
      casebase.addBox(-4F, 0F, -4F, 8, 1, 8);
      casebase.setRotationPoint(0F, 23F, 0F);
      casebase.setTextureSize(64, 32);
      casebase.mirror = true;
      setRotation(casebase, 0F, 0F, 0F);
      casecupsid4 = new ModelRenderer(this, 64, 5);
      casecupsid4.addBox(-5F, -12F, -6F, 10, 4, 1);
      casecupsid4.setRotationPoint(0F, 23F, 0F);
      casecupsid4.setTextureSize(64, 32);
      casecupsid4.mirror = true;
      setRotation(casecupsid4, 0F, -1.570796F, 0F);
      casecupsid3 = new ModelRenderer(this, 42, 5);
      casecupsid3.addBox(-5F, -12F, -6F, 10, 4, 1);
      casecupsid3.setRotationPoint(0F, 23F, 0F);
      casecupsid3.setTextureSize(64, 32);
      casecupsid3.mirror = true;
      setRotation(casecupsid3, 0F, 1.570796F, 0F);
      caseporl = new ModelRenderer(this, 32, 0);
      caseporl.addBox(-1F, -8F, -1F, 2, 8, 2);
      caseporl.setRotationPoint(0F, 23F, 0F);
      caseporl.setTextureSize(64, 32);
      caseporl.mirror = true;
      setRotation(caseporl, 0F, 0F, 0F);
      casecupbase = new ModelRenderer(this, 0, 10);
      casecupbase.addBox(-5F, -9F, -5F, 10, 1, 10);
      casecupbase.setRotationPoint(0F, 23F, 0F);
      casecupbase.setTextureSize(64, 32);
      casecupbase.mirror = true;
      setRotation(casecupbase, 0F, 0F, 0F);
      casecupsid2 = new ModelRenderer(this, 64, 0);
      casecupsid2.addBox(-5F, -12F, -6F, 10, 4, 1);
      casecupsid2.setRotationPoint(0F, 23F, 0F);
      casecupsid2.setTextureSize(64, 32);
      casecupsid2.mirror = true;
      setRotation(casecupsid2, 0F, 0F, 0F);
      casecupsid1 = new ModelRenderer(this, 42, 0);
      casecupsid1.addBox(-5F, -12F, 5F, 10, 4, 1);
      casecupsid1.setRotationPoint(0F, 23F, 0F);
      casecupsid1.setTextureSize(64, 32);
      casecupsid1.mirror = true;
      setRotation(casecupsid1, 0F, 0F, 0F);
      ice1 = new ModelRenderer(this, 0, 50);
      ice1.addBox(-4F, -15F, -4F, 8, 6, 8);
      ice1.setRotationPoint(0F, 23F, 0F);
      ice1.setTextureSize(64, 32);
      ice1.mirror = true;
      setRotation(ice1, 0F, 0F, 0F);
      ice2 = new ModelRenderer(this, 0, 40);
      ice2.addBox(-3F, -19F, -3F, 6, 3, 6);
      ice2.setRotationPoint(0F, 24F, 0F);
      ice2.setTextureSize(64, 32);
      ice2.mirror = true;
      setRotation(ice2, 0F, 0F, 0F);
      ice3 = new ModelRenderer(this, 0, 33);
      ice3.addBox(-2F, -20F, -2F, 4, 2, 4);
      ice3.setRotationPoint(0F, 23F, 0F);
      ice3.setTextureSize(64, 32);
      ice3.mirror = true;
      setRotation(ice3, 0F, 0F, 0F);
  }


  public void render(EnumFlapeLevel level, float rx, float ry, float rz, float scale){
	  switch(level){
		case LEVEL0:
			ice1.isHidden = true;
			ice2.isHidden = true;
			ice3.isHidden = true;
			break;
		case LEVEL1:
			ice1.isHidden = false;
			ice2.isHidden = true;
			ice2.isHidden = true;
			break;
		case LEVEL2:
			ice1.isHidden = true;
			ice2.isHidden = true;
			ice3.isHidden = false;
			break;
		case LEVEL3:
			ice1.isHidden = true;
			ice2.isHidden = true;
			ice3.isHidden = true;
			break;
		default:
			ice1.isHidden = true;
			ice2.isHidden = true;
			ice3.isHidden = true;
			break;
	  }
	  for (int i = 0; i < models.length; i++){
		  setRotation(models[i],rx,ry,rz);
		  models[i].render(scale);
	  }
  }

  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float scale)
  {
    super.render(entity, f, f1, f2, f3, f4, scale);
    setRotationAngles(f, f1, f2, f3, f4, scale);
    casebase.render(scale);
    casecupsid4.render(scale);
    casecupsid3.render(scale);
    caseporl.render(scale);
    casecupbase.render(scale);
    casecupsid2.render(scale);
    casecupsid1.render(scale);
    ice1.render(scale);
    ice2.render(scale);
    ice3.render(scale);
  }

  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }

  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float scale)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, scale, null);
  }


  public static enum EnumFlapeLevel{
	  LEVEL0,
	  LEVEL1,
	  LEVEL2,
	  LEVEL3,
	  LEVEL4;

	  private static final EnumFlapeLevel[] values = {LEVEL0,LEVEL1,LEVEL2,LEVEL3,LEVEL4};

	  public static EnumFlapeLevel getValue(int max, int cnt){
		  int limit = max / values.length;
		  int level = cnt/limit;
		  if (level < 0){level = 0;}
		  if (level >= values.length){level = 4;}
		  return values[cnt];
	  }

	  public static float RotationY(int max, int cnt){
		  int limit = max / values.length;
		  return (float)((2.0F * Math.PI)/limit * (float)(cnt%limit));
	  }
  }

}
